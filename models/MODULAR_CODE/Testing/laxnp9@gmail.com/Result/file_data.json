[
 {
  "code": "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n//4 2 3 5 7 1\r\n//2 4 3 5 7 1\r\n//2 3 4 5 7 1\r\n//2 3 4 5 7 1\r\n//2 3 4 5 7 1\r\n\r\n//2 3 4 5 7 7\r\n//2 3 4 5 5 7\r\n//2 3 4 4 5 7\r\n//2 3 3 4 5 7\r\n//2 2 3 4 5 7\r\n//1 2 3 4 5 7\r\n\r\nint binarysearch(int A[], int start, int end, int key)\r\n{\r\n    if (start == end && key < A[start])\r\n    {\r\n\r\n        return start;\r\n    }\r\n    else if (start == end && key >= A[start])\r\n    {\r\n        return start + 1;\r\n    }\r\n    int mid = (start + end) / 2;\r\n\r\n    if (key > A[mid])\r\n    {\r\n        return binarysearch(A, mid + 1, end, key);\r\n    }\r\n    else\r\n    {\r\n        return binarysearch(A, start, mid, key);\r\n    }\r\n}\r\nvoid insertionSort(int A[], int size)\r\n{\r\n    for (int j = 1; j < size; j++)\r\n    {\r\n\r\n        int key = A[j];\r\n        int i = j - 1;\r\n        if (key > A[i])\r\n            continue;\r\n        int pos = binarysearch(A, 0, i, key);\r\n        cout << \" Correct postion of \" << key << \" is : \" << pos << endl;\r\n        for (int k = i; k >= pos; k--)\r\n        {\r\n            A[k + 1] = A[k];\r\n        }\r\n        A[pos] = key;\r\n\r\n        cout << \"After \" << j << \"th\"\r\n             << \" pass\" << endl;\r\n        for (int i = 0; i < size; i++)\r\n        {\r\n\r\n            cout << A[i] << \" \";\r\n        }\r\n        cout << endl;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int arr[] = {1, 2, 3, 4, 5};\r\n\r\n    int size = sizeof(arr) / sizeof(arr[0]);\r\n\r\n    cout << \"before Sorting \" << endl;\r\n    for (int i = 0; i < size; i++)\r\n    {\r\n\r\n        cout << arr[i] << \" \";\r\n    }\r\n\r\n    cout << endl;\r\n\r\n    insertionSort(arr, size);\r\n    cout << \"After  Sorting \" << endl;\r\n\r\n    for (int i = 0; i < size; i++)\r\n    {\r\n\r\n        cout << arr[i] << \" \";\r\n    }\r\n\r\n    return 0;\r\n}",
  "name": "binaryInsertionSort.cpp"
 },
 {
  "code": "\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// Driver code\r\nint main()\r\n{\r\n    int arr[] = {-3, 3, 1, 6};\r\n\r\n    int x = findZeroSubArray(arr);\r\n\r\n    if (x == 0)\r\n        cout << \"Found a subarray with 0 sum\";\r\n    else\r\n        cout << \"No Such Sub Array Exists!\";\r\n    return 0;\r\n}\r\n",
  "name": "breakintowords.cpp"
 }
]